+++++++++++++++++++++++++++++++++DataSet++++++++++++++++++++++++++++++++++++++++++++++++++++
INFO:__main__:Generating data with the size 8000000
INFO:__main__:changing Tele_Attatched into an object variable
INFO:__main__:Generating our target variable Asset_Label
INFO:__main__:Creating correlation between our variables and our target variable
INFO:__main__:When age is 60-70 and over 95 change Asset_Label to 1
INFO:__main__:When elevation is between 500-1500 change Asset_Label to 1
INFO:__main__:When Manufacturer is A, E, or H change Asset_Label to have  95% 0's
INFO:__main__:When Species is C2 or C5 change Asset_Label to have 90% to 0's
INFO:__main__:When District is NE or W change Asset_Label to have 90% to 0's
INFO:__main__:When District is Untreated change Asset_Label to have 70% to 1's
INFO:__main__:When Age is greater than 90 and Elevaation is less than 1200              and Original_treatment is Oil change Asset_Label to have 90% to 1's
INFO:__main__:=====> Time taken 14.067696 secs for data generation for the size of (8000000, 34)
INFO:__main__:Saving the data to ./intel_python/data_8000000.pkl ...
INFO:__main__:DONE
+++++++++++++++++++++++++++++++++Iteration1++++++++++++++++++++++++++++++++++++++++++++++++++++
Intel(R) Extension for Scikit-learn* enabled (https://github.com/intel/scikit-learn-intelex)
INFO:__main__:Reading the dataset from ./intel_python/data_8000000.pkl...
INFO:root:sklearn.model_selection.train_test_split: running accelerated version on CPU
INFO:root:sklearn.model_selection.train_test_split: running accelerated version on CPU
INFO:__main__:=====> Time taken 31.236049 secs                 for training and prediction for the data size of (8000000, 34)
INFO:__main__:=====> Training Time 25.635828 secs
INFO:__main__:=====> Prediction Time 0.758956 secs
INFO:__main__:=====> XGBoost accuracy score 0.922286
INFO:__main__:DONE
[09:51:24] WARNING: /home/sat_bot/base/conda-bld/xgboost_1642011267168/work/src/learner.cc:1096: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
+++++++++++++++++++++++++++++++++Iteration2++++++++++++++++++++++++++++++++++++++++++++++++++++
Intel(R) Extension for Scikit-learn* enabled (https://github.com/intel/scikit-learn-intelex)
INFO:__main__:Reading the dataset from ./intel_python/data_8000000.pkl...
INFO:root:sklearn.model_selection.train_test_split: running accelerated version on CPU
INFO:root:sklearn.model_selection.train_test_split: running accelerated version on CPU
INFO:__main__:=====> Time taken 31.205326 secs                 for training and prediction for the data size of (8000000, 34)
INFO:__main__:=====> Training Time 25.654020 secs
INFO:__main__:=====> Prediction Time 0.759140 secs
INFO:__main__:=====> XGBoost accuracy score 0.922006
INFO:__main__:DONE
[09:51:56] WARNING: /home/sat_bot/base/conda-bld/xgboost_1642011267168/work/src/learner.cc:1096: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
